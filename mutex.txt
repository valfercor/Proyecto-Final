#include <pthread.h>
#include <stdio.h>
#include <stdlib.h>

pthread_mutex_t mutex;
void * imprimir_mensaje(void *cont);

      
int main()
{
    int num2;
    int *num1;
	num1 = &num2;
	int cont = 0;
	
    for(int i = 0; i<5; i++)
   {
   	        pthread_mutex_init(&mutex, NULL);
            printf("Direccion de memoria: \n");
            pthread_t hilo1, hilo2; 
            
			pthread_create(&hilo1,NULL,imprimir_mensaje,(void *)cont+1);
            
			pthread_create(&hilo2,NULL,imprimir_mensaje,(void *)cont+2);
			
            pthread_join(hilo1, NULL);
            pthread_join(hilo2, NULL);
            pthread_mutex_destroy(&mutex);
            printf("\n\n");
    } 
     
     return 1;
     system("PAUSE");
     exit(0);
}

void * imprimir_mensaje( void* cont )
{
	 int *num;
	 
     pthread_mutex_lock(&mutex);
    
     printf("%d - hilo %d\n", num, cont);
    
     pthread_mutex_unlock(&mutex); 
}